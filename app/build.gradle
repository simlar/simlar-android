/*
 * Copyright (C) The Simlar Authors.
 *
 * This file is part of Simlar. (https://www.simlar.org)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

plugins {
    id "com.android.application"
    id "com.github.triplet.play" version "2.8.0"
    id "org.owasp.dependencycheck"
}

def getGitVersion = { ->
    try {
        return "git -C ${rootDir} describe --tags --always --dirty".execute().text.trim()
    }
    catch (ignored) {
        return "git-not-found"
    }
}

repositories {
    maven {
        url "https://linphone.org/maven_repository/"
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "org.simlar"
        minSdkVersion 16
        targetSdkVersion 30
        versionName getGitVersion()
        versionCode 54
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "default"

    productFlavors {
        if (useGoogleServices()) {
            push {
                dimension "default"
                versionName = android.defaultConfig.versionName
                buildConfigField("boolean", "IS_FCM_ENABLED", "true")
            }
        }

        alwaysOnline {
            dimension "default"
            versionName = android.defaultConfig.versionName + " (alwaysOnline)"
            buildConfigField("boolean", "IS_FCM_ENABLED", "false")
        }
    }


    def keystoreFile = System.getenv("SIMLAR_ANDROID_KEYSTORE_FILE")
    def keystorePassword = System.getenv("SIMLAR_ANDROID_KEYSTORE_PASSWORD")

    signingConfigs {
        release {
            storeFile keystoreFile == null ? null : file(keystoreFile)
            storePassword keystorePassword
            keyAlias "simlar"
            keyPassword keystorePassword
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            if (keystoreFile != null && keystorePassword != null) {
                println("signing with keystore: " + keystoreFile)
                signingConfig signingConfigs.release
            }
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    lintOptions {
        checkAllWarnings true
        disable "GoogleAppIndexingWarning", "UnknownNullness", "SyntheticAccessor", "DuplicateStrings"
        warningsAsErrors true
        warning "NewerVersionAvailable"
    }

    playConfigs {
        if (useGoogleServices()) {
            push {
                enabled = true
            }
        }
    }
}

play {
    def publisherCredentials = System.getenv("SIMLAR_ANDROID_PUBLISHER_CREDENTIALS")
    serviceAccountCredentials = file(publisherCredentials ? publisherCredentials : "simlar-play-publisher-credentials.json")
    enabled = false
    track = "alpha"
}

dependencyCheck {
    suppressionFile = "owasp-dependency-check-suppression.xml"
    failBuildOnCVSS = 0
}
connectedCheck.dependsOn dependencyCheckAnalyze

ext {
    androidSupportVersion = "1.0.0"
    liblinphoneSdk = "linphone-sdk-android-release.aar"
    liblinphoneVersion = "4.4.2"
}

dependencies {
    if (useGoogleServices()) {
        pushImplementation("com.google.firebase:firebase-messaging:20.2.4") {
            exclude group: "com.google.firebase", module: "firebase-core"
            exclude group: "com.google.firebase", module: "firebase-analytics"
            exclude group: "com.google.firebase", module: "firebase-measurement-connector"
        }
    }
    implementation("androidx.appcompat:appcompat:1.2.0")
    implementation("androidx.legacy:legacy-support-v4:${androidSupportVersion}")
    implementation("androidx.legacy:legacy-support-v13:${androidSupportVersion}")
    implementation("com.googlecode.libphonenumber:libphonenumber:8.12.10")

    if (new File("${rootDir}/app/libs/${liblinphoneSdk}").exists()) {
        println "using local linphone sdk build: ${liblinphoneSdk}"
        implementation fileTree(dir: "libs", include: ["${liblinphoneSdk}"])
    } else {
        debugImplementation("org.linphone:linphone-sdk-android-debug:${liblinphoneVersion}")
        releaseImplementation("org.linphone:linphone-sdk-android:${liblinphoneVersion}")
    }
}
